{
  "name": "node-recurly",
  "description": "Library for accessing the api for the Recurly recurring billing service.",
  "keywords": [
    "recurly",
    "e-commerce",
    "recurring billing"
  ],
  "version": "0.0.9",
  "homepage": "https://github.com/robrighter/node-recurly",
  "author": {
    "name": "Rob Righter",
    "email": "robrighter@gmail.com",
    "url": "http://github.com/robrighter"
  },
  "contributors": [
    {
      "name": "Rob Righter",
      "email": "robrighter@gmail.com",
      "url": "http://github.com/robrighter"
    }
  ],
  "bugs": {
    "url": "https://github.com/robrighter/node-recurly/issues"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/recurly.js",
  "dependencies": {
    "xml2js": ">= 0.1.5",
    "js2xml": ">= 0.0.2"
  },
  "engines": {
    "node": ">= 0.4"
  },
  "readme": "IMPORTANTE: This version is working with the version 2 of Recurly's API. Documentation will be updated soon.\n\nNode-Recurly\n===============\n\nnode-recurly is a node.js library for using the recurly recurring billing service. This library is intended to follow very closely the recurly documentation found at:\nhttp://docs.recurly.com/\n\nInstallation\n===============\n\n\tnpm install node-recurly\n\nadd a config file to your project that has contents similar to:\n\n\t\tmodule.exports = {\n\t\t\tAPI_USERNAME: 'secret',\n\t\t\tAPI_PASSWORD: 'secret',\n\t\t\tPRIVATE_KEY:  'secret',\n\t\t\tSUBDOMAIN:    '[your_account]',\n\t\t\tENVIRONMENT:  'sandbox',\n\t\t\tDEBUG: false\n\t\t};\n\n\nUsage\n===============\n\n\t\tvar Recurly = require('node-recurly');\n\t\tvar recurly = new Recurly(require('./config'));\n\nAfter that, just call the methods below:\n\n\nAccounts\n===============\nhttp://docs.recurly.com/api/accounts\n\n\trecurly.accounts.create(details, callback)\n\n\trecurly.accounts.update(accountcode, details, callback) \n\n\n\trecurly.accounts.get(accountcode, callback) \n\n\n\trecurly.accounts.close(accountcode, callback) \n\n\n\trecurly.accounts.listAll(callback, filter)\n\nBilling Information\n===============\nhttp://docs.recurly.com/transparent-post/billing-info\n\n\trecurly.billingInfo.update(accountcode, details, callback) \n\n\n\trecurly.billingInfo.get(accountcode, callback) \n\n\n\trecurly.billingInfo.delete(accountcode, callback) \n\n\nCharges\n===============\nhttp://docs.recurly.com/api/charges\n\n\trecurly.charges.listAll(accountcode, callback, filter) \n\n\n\trecurly.charges.chargeAccount(accountcode, details, callback) \n\n\nCoupons\n===============\nhttp://docs.recurly.com/api/coupons\n\n\trecurly.coupons.getAssociatedWithAccount(accountcode, callback) \n\n\n\nNOTE: Redeem coupon with subscription not added here since it is a duplication of the subscription creation method\n\n\trecurly.coupons.redeemOnAccount(accountcode, details, callback) \n\n\n\trecurly.coupons.removeFromAccount(accountcode, callback) \n\n  \nCharges\n===============\nhttp://docs.recurly.com/api/credits\n\n\trecurly.credits.listAll(accountcode, callback) \n\n\n\trecurly.credits.creditAccount(accountcode, details, callback) \n\n\nInvoices\n===============\nhttp://docs.recurly.com/api/invoices\n\n\trecurly.invoices.getAssociatedWithAccount(accountcode, callback) \n\n\n\trecurly.invoices.get(invoiceid, callback) \n\n\n\trecurly.invoices.invoiceAccount(accountcode, callback) \n\n\n\nSubscriptions\n===============\nhttp://docs.recurly.com/api/subscriptions\n\n\trecurly.subscriptions.getAssociatedWithAccount(accountcode, callback) \n\n\n\n**NOTE Certain uses of this method will have implications on PCI compliance because this\nfunction requires access to and transmission of customer credit card information.\n\n\trecurly.subscriptions.create(accountcode, details, callback) \n\n\n\nrefundtype can be 'partial', 'full' or 'none'\n\n\trecurly.subscriptionsrefund(accountcode, callback, refundtype) \n\n\n\nSubscription Plans\n===============\nhttp://docs.recurly.com/api/subscription-plans\n\n\trecurly.subscriptionPlans.listAll(callback) \n\n\n\trecurly.subscriptionPlans.get(plancode, callback) \n\n\n\nCreate, Update, and Delete are not implemented because the reculy documentation indicates them as advanced cases\n\n\nTransactions\n===============\nhttp://docs.recurly.com/api/transactions\n\n\trecurly.transactions.listAll(accountcode, callback, filter) \n\n\n\trecurly.transactions.getAssociatedWithAccount(accountcode, callback) \n\n\n\trecurly.transactions.get(transactionid, callback) \n\n\n\trecurly.transactions.void(transactionid, callback) \n\n\n\trecurly.transactions.refund(transactionid, callback, amount) \n\nNOTE Certain uses of this method will have implications on PCI compliance because this\nfunction requires access to and transmission of customer credit card information.\n\n\trecurly.transactions.createImmediateOneTimeTransaction(accountcode, details, callback)\n\nTransparent Post\n==================\nhttp://docs.recurly.com/transparent-post/basics\n\n\trecurly.transparent.billingInfoUrl\n\n\trecurly.transparent.subscribeUrl\n\n\trecurly.transparent.transactionUrl\n\n\trecurly.transparent.hidden_field(data)\n\n\trecurly.transparent.getResults(confirm, result, status, type, callback){\n\n\trecurly.transparent..getFormValuesFromResult(result, type)",
  "readmeFilename": "README.md",
  "_id": "node-recurly@0.0.9",
  "dist": {
    "shasum": "8f19667187cf68c1afad56cf07ddb5996dc96f2f"
  },
  "_from": "node-recurly@git://github.com/SocialBro/node-recurly.git#master"
}
