// Generated by CoffeeScript 1.4.0
(function() {
  var MailChimpAPI, app, auth, brandidAuth, express, intercom, mcApiKey, mcList, mcapi, port, xmlBodyParser;

  brandidAuth = require("./custom_modules/brandid/auth");

  xmlBodyParser = require("./custom_modules/xmlBodyParser/xmlBodyParser");

  express = require("express");

  intercom = require('node-intercom').app();

  MailChimpAPI = require("mailchimp").MailChimpAPI;

  mcApiKey = "dc139a3abdb76130fd9428050e80e9a6-us4";

  if (process.env.NODE_ENV === "production") {
    mcList = "60f76471f7";
  } else {
    mcList = "776ea4d634";
  }

  try {
    mcapi = new MailChimpAPI(mcApiKey, {
      version: "1.3",
      secure: true
    });
  } catch (error) {
    console.log(error.message);
  }

  port = 3000;

  app = express();

  auth = express.basicAuth(brandidAuth.http.user, brandidAuth.http.password);

  app.configure(function() {
    app.use(xmlBodyParser.xmlBodyParser);
    return app.use(express.bodyParser());
  });

  app.get('/', function(req, res) {
    res.contentType("text/html");
    return res.send('<h1>No entry for you mofo!</h1>', 200);
  });

  app.post('/recurly/push', auth, function(req, res) {
    var responseData;
    responseData = req.body;
    res.contentType("application/json");
    return res.send(req.body, 200);
  });

  app.post('/user/new', auth, function(req, res) {
    var mergeVars, payload, user;
    user = req.body;
    if (typeof user.email !== "undefined") {
      mergeVars = {};
      if (typeof user.gender !== "undefined") {
        mergeVars.GENDER = user.gender;
      }
      if (typeof user.first_name !== "undefined") {
        mergeVars.FNAME = user.first_name;
      }
      if (typeof user.last_name !== "undefined") {
        mergeVars.LNAME = user.last_name;
      }
      if (typeof user.birthday !== "undefined") {
        mergeVars.DOB = user.birthday;
        mergeVars.BIRTHDAY = user.birthday.substr(0, 5);
      }
      if (typeof user.authData !== "undefined") {
        if (typeof user.authData.facebook !== "undefined") {
          mergeVars.FBID = user.authData.facebook.id;
        }
      }
      if (typeof user.objectId !== "undefined") {
        mergeVars.UID = user.objectId;
      }
      payload = {
        id: mcList,
        email_address: user.email,
        merge_vars: mergeVars,
        email_type: 'html',
        double_optin: false,
        update_existing: true,
        replace_interests: true,
        send_welcome: false
      };
      console.dir(payload);
      return mcapi.listSubscribe(payload, function(error, data) {
        if (error == null) {
          res.contentType("application/json");
          return res.send(200, JSON.stringify(data));
        } else {
          return console.log(error);
        }
      });
    }
  });

  app.listen(port, function() {
    return console.log("Listening on " + port);
  });

}).call(this);
